{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["Button","props","component","icon","otherProps","Component","href","outlined","color","children","text","alert","capsule","darkTheme","circular","StyledIcon","Icon","StyledButton","console","log","css","alertButtonStylesMap","alertOutlinedButtonStylesMap","COLORS","includes","iconStylesMap"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAqC;AAAA,yBAM5CA,KAN4C,CAG5CC,SAH4C;AAAA,MAG5CA,SAH4C,iCAGhC,QAHgC;AAAA,MAI5CC,IAJ4C,GAM5CF,KAN4C,CAI5CE,IAJ4C;AAAA,MAKzCC,UALyC,4BAM5CH,KAN4C;;AAQhD,MAAII,SAAS,GAAGH,SAAhB;;AACA,MAAIA,SAAS,KAAK,QAAd,IAA0BE,UAAU,CAACE,IAAzC,EAA+C;AAC3CD,IAAAA,SAAS,GAAG,GAAZ;AACH;;AAED,sBACI,6BAAC,YAAD;AAAc,IAAA,SAAS,EAAEA,SAAzB;AAAoC,IAAA,IAAI,EAAEF;AAA1C,KAAoDC,UAApD,GACKD,IAAI,iBACD,6BAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,IAAlB;AAAwB,IAAA,KAAK,EAAEC,UAAU,CAACG,QAAX,GAAsBH,UAAU,CAACI,KAAjC,GAAyC;AAAxE,IAFR,EAGKJ,UAAU,CAACK,QAHhB,CADJ;AAOH,CApBD;;;AAbIP,EAAAA,S;AACAO,EAAAA,Q;AACAH,EAAAA,I;AACAI,EAAAA,I;AACAC,EAAAA,K;AACAH,EAAAA,K;AACAD,EAAAA,Q;AACAK,EAAAA,O;AACAC,EAAAA,S;AACAV,EAAAA,I;AACAW,EAAAA,Q;;eAyBWd,M;;AAEf,IAAMe,UAAU,GAAG,+BAAOC,aAAP,CAAH,mBAAhB;AAIA,IAAMC,YAAY,GAAG,+BACjB;AAAA,MAAGZ,SAAH,QAAGA,SAAH;AAAA,MAAcE,QAAd,QAAcA,QAAd;AAAA,MAAwBK,OAAxB,QAAwBA,OAAxB;AAAA,MAAiCC,SAAjC,QAAiCA,SAAjC;AAAA,MAA4CH,IAA5C,QAA4CA,IAA5C;AAAA,MAAkDP,IAAlD,QAAkDA,IAAlD;AAAA,MAA2DC,UAA3D;;AAAA,sBACI,6BAAC,SAAD,EAAeA,UAAf,CADJ;AAAA,CADiB,CAAH,qBAIb,UAAAH,KAAK,EAAI;AAAA,MAGFU,KAHE,GAWFV,KAXE,CAGFU,KAHE;AAAA,wBAWFV,KAXE,CAIFM,QAJE;AAAA,MAIFA,QAJE,gCAIS,KAJT;AAAA,uBAWFN,KAXE,CAKFW,OALE;AAAA,MAKFA,OALE,+BAKQ,KALR;AAAA,yBAWFX,KAXE,CAMFY,SANE;AAAA,MAMFA,SANE,iCAMU,KANV;AAAA,MAOFL,KAPE,GAWFP,KAXE,CAOFO,KAPE;AAAA,MAQFL,IARE,GAWFF,KAXE,CAQFE,IARE;AAAA,wBAWFF,KAXE,CASFa,QATE;AAAA,MASFA,QATE,gCASS,KATT;AAAA,oBAWFb,KAXE,CAUFS,IAVE;AAAA,MAUFA,IAVE,4BAUK,KAVL;AAYNQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,aAAOU,qBAAP,sBAoBMT,KAAK,IAAIU,6BAAqBV,KAArB,CApBf,EAqBMA,KAAK,IAAIJ,QAAT,IAAqBe,qCAA6BX,KAA7B,CArB3B,EAsBMH,KAAK,kDACiBe,eAAOf,KAAP,EAAc,GAAd,CADjB,uCAEM,CAAC,YAAD,EAAe,QAAf,EAAyB,MAAzB,EAAiC,OAAjC,EAA0CgB,QAA1C,CAAmDhB,KAAnD,IAA4D,MAA5D,GAAqE,MAF3E,gFAIqBe,eAAOf,KAAP,EAAc,GAAd,CAJrB,uCAtBX,EA6BM,CAACG,KAAD,IAAUJ,QAAV,gFAEWgB,eAAOf,KAAP,EAAc,GAAd,CAFX,kDAGsBe,eAAOf,KAAP,EAAc,GAAd,CAHtB,gFAK0Be,eAAOf,KAAP,EAAc,GAAd,CAL1B,2CAMe,CAAC,YAAD,EAAe,QAAf,EAAyB,MAAzB,EAAiC,OAAjC,EAA0CgB,QAA1C,CAAmDhB,KAAnD,IAA4D,MAA5D,GAAqE,MANpF,uCA7BN,EAsCMI,OAAO,4BAtCb,EAuCMC,SAAS,gFAEEU,eAAOf,KAAP,EAAc,GAAd,CAFF,yHAKiBe,eAAOf,KAAP,EAAc,GAAd,CALjB,sDAMiBe,eAAOf,KAAP,EAAc,GAAd,CANjB,2CAOM,CAAC,YAAD,EAAe,QAAf,EAAyB,MAAzB,EAAiC,OAAjC,EAA0CgB,QAA1C,CAAmDhB,KAAnD,IAA4D,MAA5D,GAAqE,MAP3E,uCAvCf,EAiDML,IAAI,IAAI,CAACK,KAAT,IAAkBiB,sBAActB,IAAd,CAjDxB,EAkDMA,IAAI,IAAIW,QAAR,0JAlDN,EAwDMJ,IAAI,8GAGOF,KAAK,GAAGe,eAAOf,KAAP,EAAc,GAAd,CAAH,GAAwB,MAHpC,gFAKsBA,KAAK,GAAGe,eAAOf,KAAP,EAAc,GAAd,CAAH,GAAwB,MALnD,2CAMW,CAAC,YAAD,EAAe,QAAf,EAAyB,MAAzB,EAAiC,OAAjC,EAA0CgB,QAA1C,CAAmDhB,KAAnD,IAA4D,MAA5D,GAAqE,MANhF,uEAxDV;AAyEH,CA1Fa,CAAlB","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components';\n\nimport Icon from '../Icon';\nimport {\n    alertButtonStylesMap, alertOutlinedButtonStylesMap, iconStylesMap\n} from './styles';\nimport { COLORS } from '../../utils/colors';\n\ninterface ButtonProps {\n    component?: string;\n    children?: any;\n    href?: string;\n    text?: boolean;\n    alert?: string;\n    color?: string;\n    outlined?: boolean;\n    capsule?: boolean;\n    darkTheme?: boolean;\n    icon?: string;\n    circular?: boolean;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n\n    const {\n        component = 'button',\n        icon,\n        ...otherProps\n    } = props;\n\n    let Component = component;\n    if (component === 'button' && otherProps.href) {\n        Component = 'a'\n    }\n\n    return (\n        <StyledButton Component={Component} icon={icon} {...otherProps}>\n            {icon &&\n                <StyledIcon name={icon} color={otherProps.outlined ? otherProps.color : 'white'} />}\n            {otherProps.children}\n        </StyledButton>\n    )\n}\n\nexport default Button\n\nconst StyledIcon = styled(Icon)`\n    text-align: center;\n`\n\nconst StyledButton = styled(\n    ({ Component, outlined, capsule, darkTheme, text, icon, ...otherProps }) =>\n        <Component {...otherProps} />\n)`\n   ${props => {\n\n        const {\n            alert,\n            outlined = false,\n            capsule = false,\n            darkTheme = false,\n            color,\n            icon,\n            circular = false,\n            text = false\n        } = props;\n        console.log(text)\n        return css`\n            text-align:center;\n            min-height: 1em;\n            cursor: pointer;\n            padding: 0.7em 1em;\n            margin: 0.25em 0.25em 0.25em 0;\n            text-decoration:none;\n            font-weight: 600;\n            font-size: 1rem;\n            user-select: none;\n            -webkit-user-select: none;\n            border: none;\n            border-radius: 0.285rem;\n            box-shadow: 0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            -webkit-box-shadow:0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            background: #e0e1e2;\n            &:hover{\n                background-color: #ddd;\n                opacity:.7;\n            }\n            ${alert && alertButtonStylesMap[alert]}\n            ${alert && outlined && alertOutlinedButtonStylesMap[alert]}\n            ${color && `\n                background-color: ${COLORS[color][500]};\n                color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                &:hover{\n                    background-color: ${COLORS[color][300]};\n                }\n            `}\n            ${!alert && outlined && `\n                background-color: #fff;\n                color: ${COLORS[color][500]};\n                border: 1px solid ${COLORS[color][500]};\n                &:hover{\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${capsule && `border-radius: 1.5rem;`}\n            ${darkTheme && `\n                border: 1px solid #000;\n                color: ${COLORS[color][300]};\n                background-color: #000;\n                &:hover{\n                    border: 1px solid ${COLORS[color][500]};\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${icon && !color && iconStylesMap[icon]}\n            ${icon && circular && `\n                height: 3.8em;\n                width: 3.8em;\n                border-radius: 50%;\n                font-size: 1rem;\n            `}\n            ${text && `\n                background-color: #fff;\n                border:none;\n                color: ${color ? COLORS[color][500] : '#000'};\n                &:hover{\n                    background-color: ${color ? COLORS[color][500] : '#000'};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                    opacity:1;\n                }\n            `}\n            &:focus{\n                outline:0;\n            }\n            &::-moz-focus-inner{\n                bordet-style:none;\n            }\n        `\n    }}\n`\n"],"file":"Button.js"}