{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["React","styled","css","Icon","alertButtonStylesMap","alertOutlinedButtonStylesMap","iconStylesMap","COLORS","Button","props","component","icon","otherProps","Component","href","outlined","color","children","text","alert","capsule","darkTheme","circular","StyledIcon","StyledButton","console","log","includes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components';\n\nimport Icon from '../Icon';\nimport {\n    alertButtonStylesMap, alertOutlinedButtonStylesMap, iconStylesMap\n} from './styles';\nimport { COLORS } from '../../utils/colors';\n\ninterface ButtonProps {\n    component?: string;\n    children?: any;\n    href?: string;\n    text?: boolean;\n    alert?: string;\n    color?: string;\n    outlined?: boolean;\n    capsule?: boolean;\n    darkTheme?: boolean;\n    icon?: string;\n    circular?: boolean;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n\n    const {\n        component = 'button',\n        icon,\n        ...otherProps\n    } = props;\n\n    let Component = component;\n    if (component === 'button' && otherProps.href) {\n        Component = 'a'\n    }\n\n    return (\n        <StyledButton Component={Component} icon={icon} {...otherProps}>\n            {icon &&\n                <StyledIcon name={icon} color={otherProps.outlined ? otherProps.color : 'white'} />}\n            {otherProps.children}\n        </StyledButton>\n    )\n}\n\nexport default Button\n\nconst StyledIcon = styled(Icon)`\n    text-align: center;\n`\n\nconst StyledButton = styled(\n    ({ Component, outlined, capsule, darkTheme, text, icon, ...otherProps }) =>\n        <Component {...otherProps} />\n)`\n   ${props => {\n\n        const {\n            alert,\n            outlined = false,\n            capsule = false,\n            darkTheme = false,\n            color,\n            icon,\n            circular = false,\n            text = false\n        } = props;\n        console.log(text)\n        return css`\n            text-align:center;\n            min-height: 1em;\n            cursor: pointer;\n            padding: 0.7em 1em;\n            margin: 0.25em 0.25em 0.25em 0;\n            text-decoration:none;\n            font-weight: 600;\n            font-size: 1rem;\n            user-select: none;\n            -webkit-user-select: none;\n            border: none;\n            border-radius: 0.285rem;\n            box-shadow: 0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            -webkit-box-shadow:0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            background: #e0e1e2;\n            &:hover{\n                background-color: #ddd;\n                opacity:.7;\n            }\n            ${alert && alertButtonStylesMap[alert]}\n            ${alert && outlined && alertOutlinedButtonStylesMap[alert]}\n            ${color && `\n                background-color: ${COLORS[color][500]};\n                color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                &:hover{\n                    background-color: ${COLORS[color][300]};\n                }\n            `}\n            ${!alert && outlined && `\n                background-color: #fff;\n                color: ${COLORS[color][500]};\n                border: 1px solid ${COLORS[color][500]};\n                &:hover{\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${capsule && `border-radius: 1.5rem;`}\n            ${darkTheme && `\n                border: 1px solid #000;\n                color: ${COLORS[color][300]};\n                background-color: #000;\n                &:hover{\n                    border: 1px solid ${COLORS[color][500]};\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${icon && !color && iconStylesMap[icon]}\n            ${icon && circular && `\n                height: 3.8em;\n                width: 3.8em;\n                border-radius: 50%;\n                font-size: 1rem;\n            `}\n            ${text && `\n                background-color: #fff;\n                border:none;\n                color: ${color ? COLORS[color][500] : '#000'};\n                &:hover{\n                    background-color: ${color ? COLORS[color][500] : '#000'};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                    opacity:1;\n                }\n            `}\n            &:focus{\n                outline:0;\n            }\n            &::-moz-focus-inner{\n                bordet-style:none;\n            }\n        `\n    }}\n`\n"],"file":"Button.js"}