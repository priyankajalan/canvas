{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["component","children","href","text","alert","color","outlined","capsule","darkTheme","icon","circular","Button","props","otherProps","Component","StyledIcon","styled","StyledButton","console","css","alertButtonStylesMap","alertOutlinedButtonStylesMap","COLORS","iconStylesMap"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components';\n\nimport Icon from '../Icon';\nimport {\n    alertButtonStylesMap, alertOutlinedButtonStylesMap, iconStylesMap\n} from './styles';\nimport { COLORS } from '../../utils/colors';\n\ninterface ButtonProps {\n    component?: string;\n    children?: any;\n    href?: string;\n    text?: boolean;\n    alert?: string;\n    color?: string;\n    outlined?: boolean;\n    capsule?: boolean;\n    darkTheme?: boolean;\n    icon?: string;\n    circular?: boolean;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n\n    const {\n        component = 'button',\n        icon,\n        ...otherProps\n    } = props;\n\n    let Component = component;\n    if (component === 'button' && otherProps.href) {\n        Component = 'a'\n    }\n\n    return (\n        <StyledButton Component={Component} icon={icon} {...otherProps}>\n            {icon &&\n                <StyledIcon name={icon} color={otherProps.outlined ? otherProps.color : 'white'} />}\n            {otherProps.children}\n        </StyledButton>\n    )\n}\n\nexport default Button\n\nconst StyledIcon = styled(Icon)`\n    text-align: center;\n`\n\nconst StyledButton = styled(\n    ({ Component, outlined, capsule, darkTheme, text, icon, ...otherProps }) =>\n        <Component {...otherProps} />\n)`\n   ${props => {\n\n        const {\n            alert,\n            outlined = false,\n            capsule = false,\n            darkTheme = false,\n            color,\n            icon,\n            circular = false,\n            text = false\n        } = props;\n        console.log(text)\n        return css`\n            text-align:center;\n            min-height: 1em;\n            cursor: pointer;\n            padding: 0.7em 1em;\n            margin: 0.25em 0.25em 0.25em 0;\n            text-decoration:none;\n            font-weight: 600;\n            font-size: 1rem;\n            user-select: none;\n            -webkit-user-select: none;\n            border: none;\n            border-radius: 0.285rem;\n            box-shadow: 0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            -webkit-box-shadow:0 0 0 1px transparent inset, 0 0 0 0 rgba(34,36,38,.15) inset;\n            background: #e0e1e2;\n            &:hover{\n                background-color: #ddd;\n                opacity:.7;\n            }\n            ${alert && alertButtonStylesMap[alert]}\n            ${alert && outlined && alertOutlinedButtonStylesMap[alert]}\n            ${color && `\n                background-color: ${COLORS[color][500]};\n                color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                &:hover{\n                    background-color: ${COLORS[color][300]};\n                }\n            `}\n            ${!alert && outlined && `\n                background-color: #fff;\n                color: ${COLORS[color][500]};\n                border: 1px solid ${COLORS[color][500]};\n                &:hover{\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${capsule && `border-radius: 1.5rem;`}\n            ${darkTheme && `\n                border: 1px solid #000;\n                color: ${COLORS[color][300]};\n                background-color: #000;\n                &:hover{\n                    border: 1px solid ${COLORS[color][500]};\n                    background-color: ${COLORS[color][500]};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                }\n            `}\n            ${icon && !color && iconStylesMap[icon]}\n            ${icon && circular && `\n                height: 3.8em;\n                width: 3.8em;\n                border-radius: 50%;\n                font-size: 1rem;\n            `}\n            ${text && `\n                background-color: #fff;\n                border:none;\n                color: ${color ? COLORS[color][500] : '#000'};\n                &:hover{\n                    background-color: ${color ? COLORS[color][500] : '#000'};\n                    color: ${['lightGreen', 'yellow', 'lime', 'amber'].includes(color) ? '#000' : '#fff'};\n                    opacity:1;\n                }\n            `}\n            &:focus{\n                outline:0;\n            }\n            &::-moz-focus-inner{\n                bordet-style:none;\n            }\n        `\n    }}\n`\n"],"file":"Button.js"}